import streamlit as st
import json
import os
from typing import Dict, Any, Optional
from core.interfaces.exporter import Exporter
from adapters.notion_adapter import NotionExporter

from utils.notion_utils import (
    load_notion_config, 
    save_notion_config, 
    test_notion_connection,
    load_export_history,
    add_export_to_history,
    configure_notion_exporter
)

def render_notion_config_page(library_service, app_state):
    """
    Renderiza a p√°gina de configura√ß√£o da integra√ß√£o com o Notion.
    
    Args:
        library_service: Servi√ßo da biblioteca
        app_state: Estado da aplica√ß√£o
    """
    st.markdown('<div class="main-header">üîó Configura√ß√£o do Notion</div>', unsafe_allow_html=True)
    
    # Carregar configura√ß√µes existentes
    config = load_notion_config()
    
    with st.container():
        st.markdown("""
        ### Sobre a Integra√ß√£o com o Notion
        
        Esta funcionalidade permite exportar sua biblioteca de ebooks para o Notion, criando um banco de 
        dados organizado com capas, metadados e descri√ß√µes dos livros.
        
        Para configurar a integra√ß√£o, voc√™ precisar√°:
        
        1. Um **token de integra√ß√£o** do Notion (obtido no [site de desenvolvedores do Notion](https://www.notion.so/my-integrations))
        2. O **ID do banco de dados** que voc√™ deseja usar (ou deixe em branco para criar um novo)
        """)
    
    # Formul√°rio de configura√ß√£o
    with st.form("notion_config_form"):
        # Token de integra√ß√£o
        token = st.text_input(
            "Token de Integra√ß√£o do Notion", 
            value=config.get("token", ""),
            type="password",
            help="Voc√™ pode obter um token de integra√ß√£o em https://www.notion.so/my-integrations"
        )
        
        # ID do banco de dados
        database_id = st.text_input(
            "ID do Banco de Dados (opcional)", 
            value=config.get("database_id", ""),
            help="Deixe em branco para criar um novo banco de dados durante a primeira exporta√ß√£o"
        )
        
        # Op√ß√µes avan√ßadas
        with st.expander("Op√ß√µes Avan√ßadas"):
            # Op√ß√µes para cria√ß√£o de p√°ginas
            st.subheader("Op√ß√µes de Conte√∫do")
            include_cover = st.checkbox(
                "Incluir capa como √≠cone da p√°gina", 
                value=config.get("include_cover", True),
                help="A capa do livro ser√° exibida como √≠cone da p√°gina no Notion"
            )
            
            include_description = st.checkbox(
                "Incluir descri√ß√£o/sum√°rio", 
                value=config.get("include_description", True),
                help="A descri√ß√£o ou sum√°rio do livro ser√° inclu√≠do no conte√∫do da p√°gina"
            )
            
            include_preview_link = st.checkbox(
                "Incluir link para pr√©via", 
                value=config.get("include_preview_link", True),
                help="Um link para a pr√©via do livro (no Google Books) ser√° inclu√≠do na p√°gina"
            )
            
            # Op√ß√µes de campos
            st.subheader("Campos no Banco de Dados")
            include_publisher = st.checkbox(
                "Incluir campo Editora", 
                value=config.get("include_publisher", True)
            )
            
            include_publication_date = st.checkbox(
                "Incluir campo Data de Publica√ß√£o", 
                value=config.get("include_publication_date", True)
            )
            
            include_isbn = st.checkbox(
                "Incluir campo ISBN", 
                value=config.get("include_isbn", True)
            )
            
            include_page_count = st.checkbox(
                "Incluir campo N√∫mero de P√°ginas", 
                value=config.get("include_page_count", True)
            )
            
            include_language = st.checkbox(
                "Incluir campo Idioma", 
                value=config.get("include_language", True)
            )
            
            # Op√ß√µes para status de leitura padr√£o
            st.subheader("Status de Leitura Padr√£o")
            default_reading_status = st.selectbox(
                "Status de leitura inicial para novos livros",
                options=["N√£o Lido", "Para Ler", "Lendo", "Lido", "Refer√™ncia"],
                index=0 if not config.get("default_reading_status") else 
                      ["N√£o Lido", "Para Ler", "Lendo", "Lido", "Refer√™ncia"].index(config.get("default_reading_status"))
            )
        
        # Bot√£o para salvar configura√ß√µes
        submitted = st.form_submit_button("Salvar Configura√ß√µes")
        
    if submitted:
        # Criar objeto com as configura√ß√µes
        new_config = {
            "token": token,
            "database_id": database_id,
            "include_cover": include_cover,
            "include_description": include_description,
            "include_preview_link": include_preview_link,
            "include_publisher": include_publisher,
            "include_publication_date": include_publication_date,
            "include_isbn": include_isbn,
            "include_page_count": include_page_count,
            "include_language": include_language,
            "default_reading_status": default_reading_status
        }
            
        # Salvar configura√ß√µes
        save_notion_config(new_config)
            
        # Configurar exportador no servi√ßo
        configure_notion_exporter(library_service, new_config)
            
        st.success("Configura√ß√µes do Notion salvas com sucesso!")
            
        # Oferecer op√ß√£o para testar a conex√£o
        if st.button("Testar Conex√£o"):
            if test_notion_connection(new_config):
                st.success("Conex√£o com o Notion estabelecida com sucesso!")
            else:
                st.error("Falha ao conectar com o Notion. Verifique o token de integra√ß√£o.")
    
    # Se√ß√£o de instru√ß√µes
    with st.expander("Como configurar a integra√ß√£o com o Notion"):
        st.markdown("""
        ### Passo a passo para configurar a integra√ß√£o com o Notion
        
        #### 1. Criar uma integra√ß√£o no Notion
        
        1. Acesse [https://www.notion.so/my-integrations](https://www.notion.so/my-integrations)
        2. Clique em "+ Nova integra√ß√£o"
        3. D√™ um nome para sua integra√ß√£o (ex: "Biblioteca de Ebooks")
        4. Selecione o workspace onde voc√™ quer usar a integra√ß√£o
        5. Em "Recursos", certifique-se de marcar:
           - "Conte√∫do de leitura" 
           - "Conte√∫do de inser√ß√£o"
           - "Atualiza√ß√£o de conte√∫do"
        6. Clique em "Enviar" para criar a integra√ß√£o
        7. Copie o "Token interno" que aparecer√° na tela
        
        #### 2. Permitir acesso √† p√°gina do Notion
        
        1. Abra o Notion e navegue at√© a p√°gina onde voc√™ deseja criar seu banco de dados de ebooks
        2. Clique nos tr√™s pontos (...) no canto superior direito
        3. Selecione "Adicionar conex√µes"
        4. Encontre sua integra√ß√£o na lista e clique em "Confirmar"
        
        #### 3. Configurar esta integra√ß√£o
        
        1. Cole o token no campo "Token de Integra√ß√£o do Notion" acima
        2. Se quiser usar um banco de dados existente, forne√ßa o ID. Caso contr√°rio, deixe em branco
        3. Ajuste as op√ß√µes avan√ßadas conforme desejado
        4. Clique em "Salvar Configura√ß√µes"
        
        #### 4. Como obter o ID de um banco de dados existente
        
        Se voc√™ j√° tem um banco de dados no Notion que deseja usar:
        
        1. Abra o banco de dados no Notion
        2. Na URL, o ID √© a parte longa ap√≥s o nome do workspace e antes de qualquer sinal de interroga√ß√£o
           - Exemplo: https://www.notion.so/workspace/83c75a39f33b4a7b98c40a66bdf7d166?v=...
           - Neste caso, o ID √©: 83c75a39f33b4a7b98c40a66bdf7d166
        """)
    
    # Hist√≥rico de exporta√ß√µes
    with st.expander("Hist√≥rico de Exporta√ß√µes"):
        # Recuperar hist√≥rico (implementa√ß√£o simplificada)
        export_history = load_export_history()
        
        if not export_history:
            st.info("Nenhuma exporta√ß√£o realizada ainda.")
        else:
            for entry in export_history:
                st.markdown(f"""
                **Data:** {entry['date']}  
                **Arquivo:** {entry['file']}  
                **Itens exportados:** {entry['items']}  
                **Status:** {'‚úÖ Sucesso' if entry['success'] else '‚ùå Falha'}
                """)
                
                if not entry['success'] and entry.get('error'):
                    st.error(f"Erro: {entry['error']}")
                    
                st.markdown("---")

